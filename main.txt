摘要

研究動機與目的

在旅程途中我們常會使用照片、影片或是文字等載體保留旅程途中的美好回憶。但在旅遊中不會想花太多時間在記錄上，而且旅遊結束的資料量都很可觀，人工整理會耗費相當多的時間。

因此，我們想開發一款針對整理旅遊記錄的不便，提供使用者便捷的解決方案的APP。使用者可以快速記錄軌跡、影像與文字等旅遊資料，也能自動從手機載入影像，並根據影像的拍攝時間推算拍攝地點。讓使用者能更快速地找到旅遊途中的美好記錄。

研究方法

開發框架

我們使用 Flutter 作為開發框架，其具備跨平台的能力以及豐富的 UI
庫，讓我們能夠同時在 Android、iOS 及 Web
平台建置系統，並方便實現各種客製化的介面效果。

架構設計

我們參考了 Clean architecture 與 MVVM
來設計架構，引入依賴反轉、雙向數據綁定等特性，旨在減少模組之間的依賴與增加可重用性，使得各部分能獨立開發和測試，並使得未來對系統的修改和擴展更為容易。此外，明確的架構和分層可以幫助團隊成員更快地瞭解專案結構，並減少彼此之間的工作衝突。

我們定義了兩種資料容器：

1.  Entity：作為系統中的主要資料容器，包含旅程、軌跡、座標點等核心資料。

2.  QueryItem：向外部資料庫（如SQL）請求所獲得的原始結果，格式與資料表的定義相同。

[]

分層依賴圖

我們將系統架構分為 Use Case、Repository、Data Source、View Model 和 UI
五層，圖 1
為分層依賴圖，展示了各層內部的元件與依賴關係，以下將對各層進行詳細說明。

1.  Use Case 層：

    負責業務邏輯的處理，使用 Entity 作為資料容器。當 View Model
    發起請求時，Use Case 會根據需求，調用 Repository
    來獲得或操作數據。該層也定義了抽象的 Repository 介面。

2.  Repository 層：

    實作 Use Case 層定義的介面，負責從 Data Source 調用數據，取得
    QueryItem 後轉換成 Entity 格式回傳給 Use Case。該層也定義了抽象的
    Data Source 介面。

3.  Data Source 層：

    負責實際的數據存取。根據 Repository 的請求，Data Source
    會去操作實際的數據來源，如資料庫、遠端服務或記憶體暫存等等，並以
    QueryItem 作為回傳結果。

4.  View Model 層：

    該層為 MVVM 架構中的一部分，透過 Flutter 的 ChangeNotifier
    實作。負責管理 UI 所需的狀態和邏輯。它會和 UI
    進行雙向數據綁定，並透過 Use Case 處理業務邏輯和數據操作。

5.  UI 層：

    主要負責呈現使用者界面與互動。所有的 UI
    元件都在這一層並組合成頁面，再透過 View Model
    來獲得及顯示必要的數據。

資料定義

我們定義了幾種核心資料：

1.  旅程：代表一次旅遊的所有資料，包含多個軌跡段與旅遊資料

2.  軌跡：使用者用GPS記錄的路徑

3.  旅遊資料：照片、影片、錄音、文字等多媒體

4.  座標點：用一組經緯度表示一個座標點

UI 介面設計

為了使介面簡潔易用，我們設計了兩個主要頁面，及多個底部彈出面板（Bottom
sheet），以便使用者在不用切換頁面的情況下獲取資訊或執行操作，並即時看到資料更新情況，提供更高效率的操作體驗。

[]

地圖頁面

[]

圖庫頁面

[]

旅程詳細資料面板

[]

AI對話面板

[]

旅遊資料篩選面板

[]

旅程管理面板

主要頁面與面板

1.  地圖頁面：

    如圖 2，使用者可以在地圖上探索和回顧旅遊的軌跡與資料。所有的旅遊資料點將根據其地理位置與時間順序被聚合成資料群集點，以避免畫面過於複雜。側邊有一個與圖庫頁面共用的時間軸，可以同步兩個頁面要顯示的資料群集。上方的多功能輸入欄，能讓使用者在途中快速記錄文字筆記、拍攝照片或錄製語音。

2.  圖庫頁面：

    如圖 3，以格狀排列展示所有的旅遊資料，包括圖片、筆記和語音記錄等。透過點擊側邊時間軸的資料群集，使用者能夠查看該點的所有旅遊資料。點擊旅遊資料會開啟詳細檢視視窗，並根據資料的不同類型呈現內容。

3.  旅程詳細資料面板：

    如圖 4，顯示與特定旅程相關的詳細統計資料。包括旅程的總時間、平均速度、總距離等。滑動至右側子頁面可以查看該旅程的所有軌跡資訊。

4.  AI對話面板：

    如圖 5，使用者可以透過自然語言與AI助手進行對話，請求幫助或執行特定操作。例如，使用者可以請求AI助手根據地點或時間篩選旅遊資料、整理照片或提供旅程建議等。

5.  旅遊資料篩選面板：

    如圖 6，提供一系列的篩選和排序選項，能根據標籤、地點、名稱、類別、時間等多個維度來找到和查看特定的旅遊資料。

6.  旅程管理面板：

    如圖 7，提供一個集中的列表來管理記錄中和已完成的所有旅程。會標記目前正在記錄中的旅程，也可以選擇是否讓特定的旅程軌跡在地圖上顯示，以便於比較和回顧。

結果

我們的 APP
已經完成了初步的框架和核心功能，並具備了基本的用戶界面以及旅程記錄和管理的功能。目前，已經有一個簡單的成品，能夠讓使用者記錄旅程、管理多媒體資料和查看旅行的統計信息。

我們的努力成功入圍了「2023全國大專校院智慧創新暨跨域整合創作競賽」的決賽。這肯定了我們的技術實力，也鼓勵了我們繼續改進和完善產品，以期在決賽中取得好成績，並在未來能為更多的使用者提供便捷的旅遊記錄和管理解決方案。
